{
	"info": {
		"_postman_id": "b46cc7cf-f186-4e34-b151-b390fe233055",
		"name": "udacity-fsnd-udaspicelatte",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "public",
			"item": [
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05cea6f9-9af0-4e60-9aad-4c8faf37ef4c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.drinks).to.be.an('array')",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks/",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65a195fa-a734-44b7-a7e0-c629b32d1fbb",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5050a5b9-2e15-474e-9981-0e61ec8d2ff1",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\":\"drink 81\",\n\n\t\"recipe\":[\n\t  {\n\t     \"color\":\"#ffffff\",\n\t     \"name\":\"fff\",\n\t     \"parts\":\"5\"\n\t  },\n\t  {\n\t     \"color\":\"#aaaaa\",\n\t     \"name\":\"aaaaa\",\n\t     \"parts\":\"1\"\n\t  },\n\t  {\n\t     \"color\":\"#adf4fe\",\n\t     \"name\":\"juice5\",\n\t     \"parts\":\"1\"\n\t  }\t\t  \n\t]\t\n}\n"
						},
						"url": {
							"raw": "{{host}}/drinks",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec1488aa-b4d7-468a-89f5-03484009e69c",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\":\"drink 81\",\n\n\t\"recipe\":[\n\t  {\n\t     \"color\":\"#ffffff\",\n\t     \"name\":\"fff\",\n\t     \"parts\":\"5\"\n\t  },\n\t  {\n\t     \"color\":\"#aaaaa\",\n\t     \"name\":\"aaaaa\",\n\t     \"parts\":\"1\"\n\t  },\n\t  {\n\t     \"color\":\"#adf4fe\",\n\t     \"name\":\"juice5\",\n\t     \"parts\":\"1\"\n\t  }\t\t  \n\t]\t\n}\n"
						},
						"url": {
							"raw": "{{host}}/drinks/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0aea66ad-0a6e-4533-b192-a8b0af746c78",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "barista",
			"item": [
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05cea6f9-9af0-4e60-9aad-4c8faf37ef4c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.drinks).to.be.an('array')",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/drinks",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65a195fa-a734-44b7-a7e0-c629b32d1fbb",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/drinks-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5050a5b9-2e15-474e-9981-0e61ec8d2ff1",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\":\"drink 81\",\n\n\t\"recipe\":[\n\t  {\n\t     \"color\":\"#ffffff\",\n\t     \"name\":\"fff\",\n\t     \"parts\":\"5\"\n\t  },\n\t  {\n\t     \"color\":\"#aaaaa\",\n\t     \"name\":\"aaaaa\",\n\t     \"parts\":\"1\"\n\t  },\n\t  {\n\t     \"color\":\"#adf4fe\",\n\t     \"name\":\"juice5\",\n\t     \"parts\":\"1\"\n\t  }\t\t  \n\t]\t\n}\n"
						},
						"url": {
							"raw": "{{host}}/drinks",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec1488aa-b4d7-468a-89f5-03484009e69c",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\":\"drink 81\",\n\n\t\"recipe\":[\n\t  {\n\t     \"color\":\"#ffffff\",\n\t     \"name\":\"fff\",\n\t     \"parts\":\"5\"\n\t  },\n\t  {\n\t     \"color\":\"#aaaaa\",\n\t     \"name\":\"aaaaa\",\n\t     \"parts\":\"1\"\n\t  },\n\t  {\n\t     \"color\":\"#adf4fe\",\n\t     \"name\":\"juice5\",\n\t     \"parts\":\"1\"\n\t  }\t\t  \n\t]\t\n}\n"
						},
						"url": {
							"raw": "{{host}}/drinks/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0aea66ad-0a6e-4533-b192-a8b0af746c78",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/drinks/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik4wTkNOVEEzTWpaQ1FUa3lRMEl6TmtORk0wWXhRVFUwT1RFMFFVVkNSRUpDT1RBME1EUXpOUSJ9.eyJpc3MiOiJodHRwczovL3VkYWNpdHktZnNuZC5hdXRoMC5jb20vIiwic3ViIjoiZ29vZ2xlLW9hdXRoMnwxMDY3MTQ4MTQ0MTcwNjk3MTI4OTMiLCJhdWQiOlsiZGV2IiwiaHR0cHM6Ly91ZGFjaXR5LWZzbmQuYXV0aDAuY29tL3VzZXJpbmZvIl0sImlhdCI6MTU2MDg5MDE2MCwiZXhwIjoxNTYwODk3MzYwLCJhenAiOiJPSjVwQk9ZSURFa09FVFVmUWo1ajdsSDZFTFcwMkd1MCIsInNjb3BlIjoib3BlbmlkIHByb2ZpbGUgZW1haWwiLCJwZXJtaXNzaW9ucyI6WyJnZXQ6ZHJpbmtzIiwiZ2V0OmRyaW5rcy1kZXRhaWwiXX0.j9ocW47_exQOkEa10ffh8eijGvrIMxnGRzCmbrXnfaN_8ULsgA7AnWYMtvP8RmPWvT9n8sReWnFuJajUHBUbnBO2GuJ4aM3-WDUBeJT0X_mpGUWs4lxaNTbIkWdiWPTsEiRnP3wT-dU_v3Olw2PB4UMajMIjSH-IdF2Y1CiJIOaM0gV44RGZRyRvj6C2_mOkMfoXxzw-HrVvTRCo1NcUPea5Bs04POni7azx-B7FstP_HLm0dEbbge4XbmovHwlIXknIoI8PbuGXeLBqE2hv8fErKFBuIykxzK0nErH5zSPCrkM-_9smb8TLGAH-E5j1KQb6SHDKtcV_QHnsUYFuXA",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f985b22c-34c4-4cfe-8308-f6fb98d799ac",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "596425ac-59b4-4488-9f07-4c748e1ad082",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "manager",
			"item": [
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05cea6f9-9af0-4e60-9aad-4c8faf37ef4c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.drinks).to.be.an('array')",
									"});",
									"",
									"// make sure we have a good response code",
									"if (responseCode.code == 200)",
									"{",
									"    // loop through json and find the next available drink id",
									"    var jsonData = pm.response.json();",
									"    var next_id = 0;",
									"    for( let prop in jsonData )",
									"    {",
									"        data = jsonData[prop];",
									"        for( var key in data )",
									"        {",
									"           if (data.hasOwnProperty(key)) {",
									"              ",
									"              if (data[key].id > next_id)",
									"              {",
									"                  next_id = data[key].id;",
									"              }",
									"           }        ",
									"        }",
									"    }",
									"    ",
									"    // set next drink id to a global var",
									"    pm.globals.set(\"next_id\", next_id + 1);",
									"    console.log(pm.globals.get(\"next_id\"))",
									"    ",
									"    // set random size vars",
									"    var r_1 = Math.floor(Math.random() * 5) + 1;",
									"    var r_2 = Math.floor(Math.random() * 5) + 1;",
									"    var r_3 = Math.floor(Math.random() * 5) + 1;",
									"    ",
									"    pm.globals.set(\"r_1\", r_1);",
									"    pm.globals.set(\"r_2\", r_2);",
									"    pm.globals.set(\"r_3\", r_3);",
									"    ",
									"    // set random colors",
									"    var c_1 = Math.floor(Math.random()*16777215).toString(16);",
									"    var c_2 = Math.floor(Math.random()*16777215).toString(16);",
									"    var c_3 = Math.floor(Math.random()*16777215).toString(16);",
									"    ",
									"    pm.globals.set(\"c_1\", c_1);",
									"    pm.globals.set(\"c_2\", c_2);",
									"    pm.globals.set(\"c_3\", c_3);    ",
									"}",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks/",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65a195fa-a734-44b7-a7e0-c629b32d1fbb",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.drinks).to.be.an('array')",
									"});",
									"",
									"var randomColor = Math.floor(Math.random()*16777215).toString(16);",
									"",
									"",
									"",
									"// make sure we have a good response code",
									"if (responseCode.code == 200)",
									"{",
									"    // loop through json and find the next available drink id",
									"    var jsonData = pm.response.json();",
									"    var next_id = 0;",
									"    for( let prop in jsonData )",
									"    {",
									"        data = jsonData[prop];",
									"        for( var key in data )",
									"        {",
									"           if (data.hasOwnProperty(key)) {",
									"              ",
									"              if (data[key].id > next_id)",
									"              {",
									"                  next_id = data[key].id;",
									"              }",
									"           }        ",
									"        }",
									"    }",
									"    ",
									"    // set next drink id to a global var",
									"    pm.globals.set(\"next_id\", next_id + 1);",
									"    console.log(pm.globals.get(\"next_id\"))",
									"    ",
									"    // set random size vars",
									"    var r_1 = Math.floor(Math.random() * 5) + 1;",
									"    var r_2 = Math.floor(Math.random() * 5) + 1;",
									"    var r_3 = Math.floor(Math.random() * 5) + 1;",
									"    ",
									"    pm.globals.set(\"r_1\", r_1);",
									"    pm.globals.set(\"r_2\", r_2);",
									"    pm.globals.set(\"r_3\", r_3);",
									"    ",
									"    // set random colors",
									"    var c_1 = Math.floor(Math.random()*16777215).toString(16);",
									"    var c_2 = Math.floor(Math.random()*16777215).toString(16);",
									"    var c_3 = Math.floor(Math.random()*16777215).toString(16);",
									"    ",
									"    pm.globals.set(\"c_1\", c_1);",
									"    pm.globals.set(\"c_2\", c_2);",
									"    pm.globals.set(\"c_3\", c_3);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5050a5b9-2e15-474e-9981-0e61ec8d2ff1",
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"if(pm.response.to.have.status(200))",
									"{",
									"    pm.test(\"value contains drinks object\", function () {",
									"        var jsonData = pm.response.json();",
									"        pm.expect(jsonData.drinks).to.be.an('object')",
									"        pm.globals.set(\"drink_id\", jsonData['drinks']['id']);",
									"        ",
									"    });",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\":\"Drink #{{next_id}}\",\n\n\t\"recipe\":[\n\t  {\n\t     \"color\":\"#{{c_1}}\",\n\t     \"name\":\"Vodka\",\n\t     \"parts\":\"{{r_1}}\"\n\t  },\n\t  {\n\t     \"color\":\"#{{c_2}}\",\n\t     \"name\":\"Black Tea\",\n\t     \"parts\":\"{{r_2}}\"\n\t  },\n\t  {\n\t     \"color\":\"#{{c_3}}\",\n\t     \"name\":\"Orange Juice\",\n\t     \"parts\":\"{{r_3}}\"\n\t  }\t\t  \n\t]\t\n}\n"
						},
						"url": {
							"raw": "{{host}}/drinks/",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec1488aa-b4d7-468a-89f5-03484009e69c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"if(pm.response.to.have.status(200))",
									"{",
									"    pm.test(\"value contains drinks object\", function () {",
									"        var jsonData = pm.response.json();",
									"        pm.expect(jsonData.drinks).to.be.an('object')",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\":\"Patch Drink #{{drink_id}}\",\n\n\t\"recipe\":[\n\t  {\n\t     \"color\":\"#{{c_3}}\",\n\t     \"name\":\"Vodka\",\n\t     \"parts\":\"{{r_3}}\"\n\t  },\n\t  {\n\t     \"color\":\"#{{c_1}}\",\n\t     \"name\":\"Black Tea\",\n\t     \"parts\":\"{{r_1}}\"\n\t  },\n\t  {\n\t     \"color\":\"#{{c_2}}\",\n\t     \"name\":\"Orange Juice\",\n\t     \"parts\":\"{{r_2}}\"\n\t  }\t\t  \n\t]\t\n}\n\n"
						},
						"url": {
							"raw": "{{host}}/drinks/{{drink_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks",
								"{{drink_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0aea66ad-0a6e-4533-b192-a8b0af746c78",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks/{{drink_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks",
								"{{drink_id}}"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik4wTkNOVEEzTWpaQ1FUa3lRMEl6TmtORk0wWXhRVFUwT1RFMFFVVkNSRUpDT1RBME1EUXpOUSJ9.eyJpc3MiOiJodHRwczovL3VkYWNpdHktZnNuZC5hdXRoMC5jb20vIiwic3ViIjoiZ29vZ2xlLW9hdXRoMnwxMDY3MTQ4MTQ0MTcwNjk3MTI4OTMiLCJhdWQiOlsiZGV2IiwiaHR0cHM6Ly91ZGFjaXR5LWZzbmQuYXV0aDAuY29tL3VzZXJpbmZvIl0sImlhdCI6MTU2MDg4OTU5NiwiZXhwIjoxNTYwODk2Nzk2LCJhenAiOiJPSjVwQk9ZSURFa09FVFVmUWo1ajdsSDZFTFcwMkd1MCIsInNjb3BlIjoib3BlbmlkIHByb2ZpbGUgZW1haWwiLCJwZXJtaXNzaW9ucyI6WyJkZWxldGU6ZHJpbmtzIiwiZ2V0OmRyaW5rcyIsImdldDpkcmlua3MtZGV0YWlsIiwicGF0Y2g6ZHJpbmtzIiwicG9zdDpkcmlua3MiXX0.Qk-5FC2X_RUkK00WKARYCKw_877XFuaT5ND3f3ObD9Ly1e1GMfJXhi3McV12binGGCw6x241erIjGB0t8WbWdU3bYpIVD1klZ64DVLQ8Q2LQ2NzB3eFEOgGLL85az1jIDbRiuATIRbbBOWILPJ6h6KR9L5hExklf2zuj3Bnwm7zMRmVpIJmjrUt4bWjtTOguOwJ0IVQsk4PDjGxzwfrUWFCFNDqN_u15JNLxeH21C-QvCpHs3D4Aodeh1qFUuWHfK_Gyfu91AitXPTVZRX9eZbUOVkGT3JMn4sKn9oGaKFTx2E-Y4DmoECG0uWImbX_wiRjx4aTeo7Q7hKSReMToPA",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "113ee6fe-418d-4bf4-a641-444b5816e46b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5704da6d-dc7e-42b9-8214-aa7ecf075bca",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "fc871e59-eaa4-46e8-975b-87b750ad1804",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "e5766f23-c7f1-472b-ae34-825a91147815",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "19bf7672-1903-4679-8607-a064003ba31f",
			"key": "host",
			"value": "127.0.0.1:57959",
			"type": "string"
		},
		{
			"id": "28eb9327-c32b-421c-836a-a9f0fd0237bb",
			"key": "manager_token",
			"value": "",
			"type": "string"
		},
		{
			"id": "79d37d2b-b734-4374-8898-040647ec4139",
			"key": "barista_token",
			"value": "",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}